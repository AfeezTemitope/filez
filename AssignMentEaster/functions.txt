public static boolean isPrimeNumber(int number) {
    if (number <= 1) return false;
    for (int i = 2; i < Math.sqrt(number) + 1; i++) {
        if (number % i == 0) return false;
    }
    return true;
}



public static int subtract(int a, int b) {
    return Math.abs(a - b);
}

public static float divide(int a, int b) {
    if (b == 0) return 0;
    return Math.round((float) a / b * 100) / 100f;
}
public static int factorOf(int number) {
    int count = 0;
    for (int i = 1; i <= number; i++) {
        if (number % i == 0) {
            count++;
        }
    }
    return count;
}
public static boolean isSquare(int number) {
    double sqrt = Math.sqrt(number);
    return ((sqrt - Math.floor(sqrt)) == 0);
}

public static boolean isPalindrome(int number) {
    if (number < 10000 || number > 99999) {
        throw new IllegalArgumentException("The input integer should be a five-digit integer");
    }
    String strNum = Integer.toString(number);
    String reversedStrNum = new StringBuilder(strNum).reverse().toString();
    return strNum.equals(reversedStrNum);
}

public long factorialOf(long n) {
    if (n == 0) return 1;
    else return n * factorialOf(n - 1);
}
